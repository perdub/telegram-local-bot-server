# This is a basic workflow to help you get started with Actions

name: Build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
    
      - name: Run bash script
        run: |
          chmod +x linux.sh
          ./linux.sh

      - uses: actions/upload-artifact@v4
        with:
          name: bin
          path: telegram-bot-api/bin/telegram-bot-api
        
  # This workflow contains a single job called "build"
  build-win:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Runs a set of commands using the runners shell
      - name: Prepare dependeties
        run: |
          git clone --recursive https://github.com/tdlib/telegram-bot-api.git
          cd telegram-bot-api
          git clone https://github.com/Microsoft/vcpkg.git
          cd vcpkg
          ./bootstrap-vcpkg.bat
          ./vcpkg.exe install gperf:x64-windows openssl:x64-windows zlib:x64-windows

      - name: Create Build Directory
        run: |
          cd ..
          Remove-Item build -Force -Recurse -ErrorAction SilentlyContinue
          mkdir build
          cd build

      - name: Build
        run: |
          cmake -A x64 -DCMAKE_INSTALL_PREFIX:PATH=.. -DCMAKE_TOOLCHAIN_FILE:FILEPATH=../vcpkg/scripts/buildsystems/vcpkg.cmake ..
          cmake --build . --target install --config Release

      - name: View Build Result
        run: |
          cd ../..
          ls -l telegram-bot-api/bin/telegram-bot-api*
   
      - uses: actions/upload-artifact@v4
        with:
          name: bin
          path: telegram-bot-api/bin/telegram-bot-api # or path/to/artifact
